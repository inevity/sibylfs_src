## -*- mode: makefile -*-
#SHELL:=/bin/bash
#
## bash will read this config file first
#BASH_ENV=bash_env.sh
#export BASH_ENV

########################################################################
# srcs

# this is self-contained: we don't have the .depend info before we
# build the srcs

srcs: fs_lr_parser.mli fs_lr_parser.ml fs_lexer.ml fs_test_version.ml
	touch srcs

FS_AST_MLIS:=diff.mli fs_path.mli dump.mli fs_ast.mli

fs_ast.cmi: $(FS_AST_MLIS)
	(export DISABLE_NTVE=""; $$lib_ocamlopt -c $(FS_AST_MLIS))

  #menhir --explain --infer --ocamlc "ocamlfind ocamlc -package unix,bigarray,str,num,bytes,sexplib,sexplib.syntax,cmdliner,fd-send-recv,sha,cow,cow.syntax,unix-fcntl -I ../include -syntax camlp4o" $@
	#run_menhir $<

   #menhir --explain --infer --ocamlc 'ocamlfind ocamlc -package unix,bigarray,str,num,bytes,pa_sex_conv,cmdliner,fd-send-recv,sha,cow,cow.syntax,unix-fcntl -I ../include -syntax camlp4o' fs_lr_parser.mly
	#menhir --explain --infer --ocamlc "ocamlfind ocamlc -package unix,bigarray,str,num,bytes,pa_sexp_conv,cmdliner,fd-send-recv,sha,cow,cow.syntax,unix-fcntl -I ../include -syntax camlp4o" $<
fs_lr_parser.mli: fs_lr_parser.mly fs_ast.cmi
	menhir --explain --infer --ocamlc "ocamlfind ocamlc -package unix,bigarray,str,num,bytes,pa_sexp_conv,pa_sexp_conv.syntax,cmdliner,fd-send-recv,sha,cow,cow.syntax,unix-fcntl -I ../include -syntax camlp4o" $<


# following is a dummy rule so that make only runs menhir once
# http://stackoverflow.com/questions/2973445/gnu-makefile-rule-generating-a-few-targets-from-a-single-source-file
# http://stackoverflow.com/questions/12322823/semi-colon-in-makefile-rule-definition
fs_lr_parser.ml: fs_lr_parser.mli ;

fs_lr_parser.cmi: fs_lr_parser.mli fs_ast.cmi # fs_ast.cmi will already exist
	$$lib_ocamlc fs_lr_parser.mli

fs_lexer.ml: fs_lexer.mll fs_lr_parser.cmi
	ocamllex $<



########################################
# fs_test_version.ml

fs_test_version.ml:
	./mk_fs_test_version.sh

